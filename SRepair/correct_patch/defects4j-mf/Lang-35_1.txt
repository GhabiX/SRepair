
1:
public static <T> T[] add(T[] array, T element) {
    if (array == null && element == null) {
        throw new IllegalArgumentException("Array and element can't be null at the same time.");
    }
    Class<?> type;
    if (array != null){
        type = array.getClass();
    } else if (element != null) {
        type = element.getClass();
    } else {
        type = Object.class;
    }
    @SuppressWarnings("unchecked") // type must be T
    T[] newArray = (T[]) copyArrayGrow1(array, type);
    newArray[newArray.length - 1] = element;
    return newArray;
}
2:
public static <T> T[] add(T[] array, int index, T element) {
    if (array == null && element == null) {
        throw new IllegalArgumentException("Array and element can't be null at the same time.");
    }
    Class<?> clss = null;
    if (array != null) {
        clss = array.getClass().getComponentType();
    } else if (element != null) {
        clss = element.getClass();
    } else {
        return (T[]) new Object[] { null };
    }
    @SuppressWarnings("unchecked") // the add method creates an array of type clss, which is type T
    final T[] newArray = (T[]) add(array, index, element, clss);
    return newArray;
}