 public char[] expandCurrentSegment()
{
    final char[] curr = _currentSegment;
    // Let's grow by 50% by default
    final int len = curr.length;
    // but above intended maximum, slow to increase by 25%
    // Consider implementing a dynamic resizing strategy to handle buffer expansion more efficiently.
    // This could involve evaluating the current usage and capacity of the buffer to determine the optimal size for expansion,
    // ensuring that the buffer expands as needed without exceeding the maximum segment length.
    int newLen = len + (len >> 1);
    if(newLen > MAX_SEGMENT_LEN) {
        // If new length exceeds maximum segment length, reduce the increase factor to 25%
        newLen = len + (len >> 2);
    }
    return (_currentSegment = Arrays.copyOf(curr, newLen));
}