--- 
+++ 
@@ -11,16 +11,17 @@
  */
 public class LEVENSHTEIN {
     public static int levenshtein(String source, String target) {
-        if (source.isEmpty() || target.isEmpty()) {
-            return source.isEmpty() ? target.length() : source.length();
-        } else if (source.charAt(0) == target.charAt(0)) {
-            return 1 + levenshtein(source.substring(1), target.substring(1));
-        } else {
-            return 1 + Math.min(Math.min(
-                    levenshtein(source,              target.substring(1)),
-                    levenshtein(source.substring(1), target.substring(1))),
-                    levenshtein(source.substring(1), target)
-        );
+        int[][] dp = new int[source.length()+1][target.length()+1];
+        for (int i = 0; i <= source.length(); i++) {
+            for (int j = 0; j <= target.length(); j++) {
+                if (i == 0) dp[i][j] = j;
+                else if (j == 0) dp[i][j] = i;
+                else if (source.charAt(i-1) == target.charAt(j-1))
+                    dp[i][j] = dp[i-1][j-1];
+                else
+                    dp[i][j] = 1 + Math.min(Math.min(dp[i-1][j], dp[i][j-1]), dp[i-1][j-1]);
+            }
         }
+        return dp[source.length()][target.length()];
     }
 }